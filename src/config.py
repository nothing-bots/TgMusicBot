#  Copyright (c) 2025 AshokShau
#  Licensed under the GNU AGPL v3.0: https://www.gnu.org/licenses/agpl-3.0.html
#  Part of the TgMusicBot project. All rights reserved where applicable.

#  NOTE: DO NOT EDIT THIS FILE UNLESS YOU KNOW WHAT YOU ARE DOING
#  Configure environment variables using the .env file instead

from os import getenv
from typing import Optional

from dotenv import load_dotenv

load_dotenv()


def get_env_int(name: str, default: Optional[int] = None) -> Optional[int]:
    value = getenv(name)
    return int(value) if value and value.isdigit() else default


API_ID: Optional[int] = get_env_int("API_ID")
API_HASH: Optional[str] = getenv("API_HASH")
TOKEN: Optional[str] = getenv("TOKEN")

SESSION_STRINGS: list[str] = [getenv(f"STRING{i}", None) for i in range(1, 11)]

SESSION_STRINGS = [s for s in SESSION_STRINGS if s]

UPSTREAM_REPO = "https://github.com/nothing-bots/dan"
ALLOWED_USERS = [7321657753, 6848223695, 6517263456, 5350261891, 7765692814]
OWNER_ID = [7321657753, 6848223695, 7765692814]
LOGGER_ID: int = get_env_int("LOGGER_ID", 0)
MONGO_URI: Optional[str] = getenv("MONGO_URI")
API_URL: Optional[str] = getenv("API_URL")
API_KEY: Optional[str] = getenv("API_KEY")
PROXY_URL: Optional[str] = getenv("PROXY_URL")

DEFAULT_SERVICE: str = getenv("DEFAULT_SERVICE", "youtube").lower()
DOWNLOADS_DIR: str = getenv("DOWNLOADS_DIR", "database/music")
SUPPORT_GROUP: str = getenv("SUPPORT_GROUP", "https://t.me/GuardxSupport")
SUPPORT_CHANNEL: str = getenv("SUPPORT_CHANNEL", "https://t.me/FallenProjects")
OWNER_USERNAME = getenv("OWNER_USERNAME", "tg://user?id=7765692814")
CLONE = getenv("CLONE", "https://t.me/Cloning_music_Bot")
IGNORE_BACKGROUND_UPDATES: bool = (
    getenv("IGNORE_BACKGROUND_UPDATES", "True").lower() == "true"
)
AUTO_LEAVE: bool = getenv("AUTO_LEAVE", "True").lower() == "true"


def process_cookie_urls(env_value: Optional[str]) -> list[str]:
    """Parse COOKIES_URL for one or more valid URLs."""
    if not env_value:
        return []
    parts = env_value.replace(",", " ").split()
    return [url.strip() for url in parts if url.strip()]


COOKIES_URL: list[str] = process_cookie_urls(getenv("COOKIES_URL", ""))

# Developer IDs (OWNER_ID is always included)
devs_env: Optional[str] = getenv("DEVS")
DEVS: list[int] = list(map(int, devs_env.split())) if devs_env else []
if OWNER_ID not in DEVS:
    DEVS.append(OWNER_ID)
